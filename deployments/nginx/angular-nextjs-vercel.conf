server {
    server_name angular-nextjs-nginx-vercel.mesquita.dev;
    location / {
        proxy_pass http://127.0.0.1:4200;
	proxy_set_header Host       $host;
      	proxy_set_header Upgrade    $http_upgrade;
      	proxy_set_header Connection $http_connection;
      	proxy_set_header Host       $host;
    }
    location /n1 {
        # Proxy requests to the Next.js app hosted on Vercel
        proxy_pass https://angular-nextjs-poc.vercel.app;
        proxy_set_header Host angular-nextjs-poc.vercel.app;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $http_connection;
    }
    location /_next/ {
        # Proxy requests for Next.js static assets
        proxy_pass https://angular-nextjs-poc.vercel.app/_next/;
        proxy_set_header Host angular-nextjs-poc.vercel.app;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/angular-nextjs-nginx.mesquita.dev/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/angular-nextjs-nginx.mesquita.dev/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}
server {
    if ($host = angular-nextjs-nginx-vercel.mesquita.dev) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    server_name angular-nextjs-nginx-vercel.mesquita.dev;
    listen 80;
    return 404; # managed by Certbot


}